generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [postgis]
}

model Property {
  id                Int           @id @default(autoincrement())
  name              String
  description       String
  pricePerMonth     Float
  securityDeposit   Float
  applicationFee    Float
  photoUrls         String[]
  amenities         Amenity[]
  highlights        Highlight[]
  isPetsAllowed     Boolean       @default(false)
  isParkingIncluded Boolean       @default(false)
  beds              Int
  baths             Float
  squareFeet        Int
  propertyType      PropertyType
  postedDate        DateTime      @default(now())
  averageRating     Float?        @default(0)
  numberOfReviews   Int?          @default(0)
  locationId        Int
  managerCognitoId  String
  applications      Application[]
  leases            Lease[]
  location          Location      @relation(fields: [locationId], references: [id])
  manager           Manager       @relation(fields: [managerCognitoId], references: [cognitoId])
  favoritedBy       Tenant[]      @relation("TenantFavorites")
  tenants           Tenant[]      @relation("TenantProperties")
}

model Manager {
  id                Int        @id @default(autoincrement())
  cognitoId         String     @unique
  name              String
  email             String
  phoneNumber       String
  managedProperties Property[]
}

model Tenant {
  id           Int           @id @default(autoincrement())
  cognitoId    String        @unique
  name         String
  email        String
  phoneNumber  String
  applications Application[]
  leases       Lease[]
  favorites    Property[]    @relation("TenantFavorites")
  properties   Property[]    @relation("TenantProperties")
}

model Location {
  id          Int                      @id @default(autoincrement())
  address     String
  city        String
  state       String
  country     String
  postalCode  String
  coordinates Unsupported("geography")
  properties  Property[]
}

model Application {
  id              Int               @id @default(autoincrement())
  applicationDate DateTime
  status          ApplicationStatus
  propertyId      Int
  tenantCognitoId String
  name            String
  email           String
  phoneNumber     String
  message         String?
  leaseId         Int?              @unique
  lease           Lease?            @relation(fields: [leaseId], references: [id])
  property        Property          @relation(fields: [propertyId], references: [id])
  tenant          Tenant            @relation(fields: [tenantCognitoId], references: [cognitoId])
}

model Lease {
  id              Int          @id @default(autoincrement())
  startDate       DateTime
  endDate         DateTime
  rent            Float
  deposit         Float
  propertyId      Int
  tenantCognitoId String
  application     Application?
  property        Property     @relation(fields: [propertyId], references: [id])
  tenant          Tenant       @relation(fields: [tenantCognitoId], references: [cognitoId])
  payments        Payment[]
}

model Payment {
  id            Int           @id @default(autoincrement())
  amountDue     Float
  amountPaid    Float
  dueDate       DateTime
  paymentDate   DateTime
  paymentStatus PaymentStatus
  leaseId       Int
  lease         Lease         @relation(fields: [leaseId], references: [id])
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model spatial_ref_sys {
  srid      Int     @id
  auth_name String? @db.VarChar(256)
  auth_srid Int?
  srtext    String? @db.VarChar(2048)
  proj4text String? @db.VarChar(2048)
}

enum Highlight {
  HighSpeedInternetAccess
  WasherDryer
  AirConditioning
  Heating
  SmokeFree
  CableReady
  SatelliteTV
  DoubleVanities
  TubShower
  Intercom
  SprinklerSystem
  RecentlyRenovated
  CloseToTransit
  GreatView
  QuietNeighborhood
}

enum Amenity {
  WasherDryer
  AirConditioning
  Dishwasher
  HighSpeedInternet
  HardwoodFloors
  WalkInClosets
  Microwave
  Refrigerator
  Pool
  Gym
  Parking
  PetsAllowed
  WiFi
}

enum PropertyType {
  Rooms
  Tinyhouse
  Apartment
  Villa
  Townhouse
  Cottage
}

enum ApplicationStatus {
  Pending
  Denied
  Approved
}

enum PaymentStatus {
  Pending
  Paid
  PartiallyPaid
  Overdue
}
